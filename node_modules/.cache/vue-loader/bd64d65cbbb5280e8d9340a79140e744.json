{"remainingRequest":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\Users.vue","mtime":1602747267545},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/views/Home/children","sourcesContent":["<template>\r\n  <div>\r\n    <!--面包屑导航区域-->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n    <el-breadcrumb-item>活动管理</el-breadcrumb-item>\r\n    <el-breadcrumb-item>活动列表</el-breadcrumb-item>\r\n  </el-breadcrumb>\r\n    <!--卡片视图区域-->\r\n    <el-card class=\"box-card\">\r\n      <!-- 搜索与添加区域 -->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 用户列表区域 -->\r\n      <el-table :data=\"userlist\" border stripe>\r\n        <el-table-column type=\"index\"></el-table-column>\r\n        <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n        <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n        <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\r\n        <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\r\n        <el-table-column label=\"状态\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\">\r\n            </el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180px\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 修改按钮 -->\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n            <!-- 删除按钮 -->\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeUserById(scope.row.id)\"></el-button>\r\n            <!-- 分配角色按钮 -->\r\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"setRole(scope.row)\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加用户的对话框 -->\r\n    <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <!-- 内容主体区域 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"addForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"addForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"addForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" prop=\"mobile\">\r\n          <el-input v-model=\"addForm.mobile\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- 底部区域 -->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改用户的对话框 -->\r\n    <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"editForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"editForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机\" prop=\"mobile\">\r\n          <el-input v-model=\"editForm.mobile\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <!-- 分配角色的对话框 -->\r\n    <el-dialog title=\"分配角色\" :visible.sync=\"setRoleDialogVisible\" width=\"50%\" @close=\"setRoleDialogClosed\">\r\n      <div>\r\n        <p>当前的用户：{{userInfo.username}}</p>\r\n        <p>当前的角色：{{userInfo.role_name}}</p>\r\n        <p>分配新角色：\r\n          <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\">\r\n            <el-option v-for=\"item in rolesList\" :key=\"item.id\" :label=\"item.roleName\" :value=\"item.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </p>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Users\",\r\n    data() {\r\n      // 验证邮箱的规则\r\n      var checkEmail = (rule, value, cb) => {\r\n        // 验证邮箱的正则表达式\r\n        const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n\r\n        if (regEmail.test(value)) {\r\n          // 合法的邮箱\r\n          return cb()\r\n        }\r\n\r\n        cb(new Error('请输入合法的邮箱'))\r\n      }\r\n\r\n      // 验证手机号的规则\r\n      var checkMobile = (rule, value, cb) => {\r\n        // 验证手机号的正则表达式\r\n        const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n\r\n        if (regMobile.test(value)) {\r\n          return cb()\r\n        }\r\n\r\n        cb(new Error('请输入合法的手机号'))\r\n      }\r\n\r\n      return {\r\n        // 获取用户列表的参数对象\r\n        queryInfo: {\r\n          query: '',\r\n          // 当前的页数\r\n          pagenum: 1,\r\n          // 当前每页显示多少条数据\r\n          pagesize: 2\r\n        },\r\n        userlist: [],\r\n        total: 0,\r\n        // 控制添加用户对话框的显示与隐藏\r\n        addDialogVisible: false,\r\n\r\n        // 添加用户的表单数据\r\n        addForm: {\r\n          username: '',\r\n          password: '',\r\n          email: '',\r\n          mobile: ''\r\n        },\r\n        // 添加表单的验证规则对象\r\n        addFormRules: {\r\n          username: [\r\n            { required: true, message: '请输入用户名', trigger: 'blur' },\r\n            {\r\n              min: 3,\r\n              max: 10,\r\n              message: '用户名的长度在3~10个字符之间',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'blur' },\r\n            {\r\n              min: 6,\r\n              max: 15,\r\n              message: '用户名的长度在6~15个字符之间',\r\n              trigger: 'blur'\r\n            }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n            { validator: checkEmail, trigger: 'blur' }\r\n          ],\r\n          mobile: [\r\n            { required: true, message: '请输入手机号', trigger: 'blur' },\r\n            { validator: checkMobile, trigger: 'blur' }\r\n          ]\r\n        },\r\n\r\n\r\n        // 控制修改用户对话框的显示与隐藏\r\n        editDialogVisible: false,\r\n        // 查询到的用户信息对象\r\n        editForm: {},\r\n        // 修改表单的验证规则对象\r\n        editFormRules: {\r\n          email: [\r\n            { required: true, message: '请输入用户邮箱', trigger: 'blur' },\r\n            { validator: checkEmail, trigger: 'blur' }\r\n          ],\r\n          mobile: [\r\n            { required: true, message: '请输入用户手机', trigger: 'blur' },\r\n            { validator: checkMobile, trigger: 'blur' }\r\n          ]\r\n        },\r\n        // 控制分配角色对话框的显示与隐藏\r\n        setRoleDialogVisible: false,\r\n        // 需要被分配角色的用户信息\r\n        userInfo: {},\r\n        // 所有角色的数据列表\r\n        rolesList: [],\r\n        // 已选中的角色Id值\r\n        selectedRoleId: ''\r\n      }\r\n    },\r\n    created() {\r\n      this.getUserList()\r\n    },\r\n    methods: {\r\n      async getUserList() {\r\n        const { data: res } = await this.$http.get('users', {\r\n          params: this.queryInfo\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取用户列表失败！')\r\n        }\r\n        this.userlist = res.data.users\r\n        this.total = res.data.total\r\n        //console.log(res)\r\n      },\r\n      // 监听 pagesize 改变的事件\r\n      handleSizeChange(newSize) {\r\n        // console.log(newSize)\r\n        this.queryInfo.pagesize = newSize\r\n        this.getUserList()\r\n      },\r\n      // 监听 页码值 改变的事件\r\n      handleCurrentChange(newPage) {\r\n        console.log(newPage)\r\n        this.queryInfo.pagenum = newPage\r\n        this.getUserList()\r\n      },\r\n      // 监听 switch 开关状态的改变\r\n      async userStateChanged(userinfo) {\r\n        console.log(userinfo)\r\n        const { data: res } = await this.$http.put(\r\n            `users/${userinfo.id}/state/${userinfo.mg_state}`\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          userinfo.mg_state = !userinfo.mg_state\r\n          return this.$message.error('更新用户状态失败！')\r\n        }\r\n        this.$message.success('更新用户状态成功！')\r\n      },\r\n      // 监听添加用户对话框的关闭事件\r\n      addDialogClosed() {\r\n        this.$refs.addFormRef.resetFields()\r\n      },\r\n      // 点击按钮，添加新用户\r\n      addUser() {\r\n        this.$refs.addFormRef.validate(async valid => {\r\n          if (!valid) return\r\n          // 可以发起添加用户的网络请求\r\n          const { data: res } = await this.$http.post('users', this.addForm)\r\n\r\n          if (res.meta.status !== 201) {\r\n            this.$message.error('添加用户失败！')\r\n          }\r\n\r\n          this.$message.success('添加用户成功！')\r\n          // 隐藏添加用户的对话框\r\n          this.addDialogVisible = false\r\n          // 重新获取用户列表数据\r\n          this.getUserList()\r\n        })\r\n      },\r\n\r\n      //展示编辑用户的对话框\r\n      async showEditDialog(id){\r\n       const {data : res} = await this.$http.get('users/'+id )\r\n        if (res.meta.status !== 200){\r\n          return this.$message.error('查询用户信息失败')\r\n        }\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n      },\r\n      //监听修改用户对话框的关闭事件\r\n      editDialogClosed() {\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n      // 修改用户信息并提交\r\n      editUserInfo() {\r\n        this.$refs.editFormRef.validate(async valid => {\r\n          if (!valid) return\r\n          // 发起修改用户信息的数据请求\r\n          const { data: res } = await this.$http.put(\r\n              'users/' + this.editForm.id,\r\n              {\r\n                email: this.editForm.email,\r\n                mobile: this.editForm.mobile\r\n              }\r\n          )\r\n\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('更新用户信息失败！')\r\n          }\r\n\r\n          // 关闭对话框\r\n          this.editDialogVisible = false\r\n          // 刷新数据列表\r\n          this.getUserList()\r\n          // 提示修改成功\r\n          this.$message.success('更新用户信息成功！')\r\n        })\r\n      } ,\r\n      // 根据Id删除对应的用户信息\r\n     async  removeUserById(id) {\r\n        //弹框查询用户是否删除数据\r\n        const configResult = await this.$confirm(\r\n            '此操作将永远删除用户，是否继续？',\r\n             '提示',{\r\n              confirmButtonText:'确定',\r\n              cancelButtonText:'取消',\r\n              type:'warning'\r\n            }).catch(error => error)\r\n\r\n       // 如果用户确认删除，则返回值为字符串 confirm\r\n       // 如果用户取消了删除，则返回值为字符串 cancel\r\n       // console.log(confirmResult)\r\n       if (configResult !== 'confirm'){\r\n         return this.$message.info('已取消删除')\r\n       }\r\n       const { data : res} = await this.$http.delete('users/' + id)\r\n\r\n       if (res.meta.status !== 200) {\r\n         return this.$message.error('删除用户成功')\r\n\r\n       }\r\n\r\n       this.$message.success('删除用户成功！')\r\n       this.getUserList()\r\n      },\r\n      //展示分配角色对话框\r\n      async setRole(userInfo)  {\r\n        this.userInfo = userInfo\r\n\r\n        //在展示对话框之前，获取角色的列表\r\n        const { data : res} = await this.$http.get('roles')\r\n        if (res.meta.status !== 200 ){\r\n          return this.$message.error('获取角色列表失败')\r\n        }\r\n\r\n        this.rolesList = res.data\r\n        this.setRoleDialogVisible = true\r\n      },\r\n      // 点击按钮，添加新用户\r\n      addUser() {\r\n        this.$refs.addFormRef.validate(async valid => {\r\n          if (!valid) return\r\n          // 可以发起添加用户的网络请求\r\n          const { data: res } = await this.$http.post('users', this.addForm)\r\n\r\n          if (res.meta.status !== 201) {\r\n            this.$message.error('添加用户失败！')\r\n          }\r\n\r\n          this.$message.success('添加用户成功！')\r\n          // 隐藏添加用户的对话框\r\n          this.addDialogVisible = false\r\n          // 重新获取用户列表数据\r\n          this.getUserList()\r\n        })\r\n      },\r\n      // 展示编辑用户的对话框\r\n      async showEditDialog(id) {\r\n        // console.log(id)\r\n        const { data: res } = await this.$http.get('users/' + id)\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('查询用户信息失败！')\r\n        }\r\n\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n      },\r\n      // 监听修改用户对话框的关闭事件\r\n      editDialogClosed() {\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n      // 修改用户信息并提交\r\n      editUserInfo() {\r\n        this.$refs.editFormRef.validate(async valid => {\r\n          if (!valid) return\r\n          // 发起修改用户信息的数据请求\r\n          const { data: res } = await this.$http.put(\r\n              'users/' + this.editForm.id,\r\n              {\r\n                email: this.editForm.email,\r\n                mobile: this.editForm.mobile\r\n              }\r\n          )\r\n\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('更新用户信息失败！')\r\n          }\r\n\r\n          // 关闭对话框\r\n          this.editDialogVisible = false\r\n          // 刷新数据列表\r\n          this.getUserList()\r\n          // 提示修改成功\r\n          this.$message.success('更新用户信息成功！')\r\n        })\r\n      },\r\n      // 根据Id删除对应的用户信息\r\n      async removeUserById(id) {\r\n        // 弹框询问用户是否删除数据\r\n        const confirmResult = await this.$confirm(\r\n            '此操作将永久删除该用户, 是否继续?',\r\n            '提示',\r\n            {\r\n              confirmButtonText: '确定',\r\n              cancelButtonText: '取消',\r\n              type: 'warning'\r\n            }\r\n        ).catch(err => err)\r\n\r\n        // 如果用户确认删除，则返回值为字符串 confirm\r\n        // 如果用户取消了删除，则返回值为字符串 cancel\r\n        // console.log(confirmResult)\r\n        if (confirmResult !== 'confirm') {\r\n          return this.$message.info('已取消删除')\r\n        }\r\n\r\n        const { data: res } = await this.$http.delete('users/' + id)\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('删除用户失败！')\r\n        }\r\n\r\n        this.$message.success('删除用户成功！')\r\n        this.getUserList()\r\n      },\r\n      // 展示分配角色的对话框\r\n      async setRole(userInfo) {\r\n        this.userInfo = userInfo\r\n\r\n        // 在展示对话框之前，获取所有角色的列表\r\n        const { data: res } = await this.$http.get('roles')\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取角色列表失败！')\r\n        }\r\n\r\n        this.rolesList = res.data\r\n\r\n        this.setRoleDialogVisible = true\r\n      },\r\n      // 点击按钮，分配角色\r\n      async saveRoleInfo() {\r\n        if (!this.selectedRoleId) {\r\n          return this.$message.error('请选择要分配的角色！')\r\n        }\r\n\r\n        const { data: res } = await this.$http.put(\r\n            `users/${this.userInfo.id}/role`,\r\n            {\r\n              rid: this.selectedRoleId\r\n            }\r\n        )\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('更新角色失败！')\r\n        }\r\n\r\n        this.$message.success('更新角色成功！')\r\n        this.getUserList()\r\n        this.setRoleDialogVisible = false\r\n      },\r\n      // 监听分配角色对话框的关闭事件\r\n      setRoleDialogClosed() {\r\n        this.selectedRoleId = ''\r\n        this.userInfo = {}\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}