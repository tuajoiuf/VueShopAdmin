{"remainingRequest":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\report\\Report.vue","mtime":1605720658673},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyAxLiDlr7zlhaUgZWNoYXJ0cw0KaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cycNCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICAvLyDpnIDopoHlkIjlubbnmoTmlbDmja4NCiAgICAgIG9wdGlvbnM6IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAn55So5oi35p2l5rqQJw0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLA0KICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0U5RUVGMycNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZWZ0OiAnMyUnLA0KICAgICAgICAgIHJpZ2h0OiAnNCUnLA0KICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICAvL+S4pOi+ueeVmeeZvQ0KICAgICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlDQogICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICB5QXhpczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScNCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7fSwNCiAgLy8g5q2k5pe277yM6aG16Z2i5LiK55qE5YWD57Sg77yM5bey57uP6KKr5riy5p+T5a6M5q+V5LqG77yBDQogIGFzeW5jIG1vdW50ZWQoKSB7DQogICAgLy8gMy4g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iw0KICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykpDQoNCiAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3JlcG9ydHMvdHlwZS8xJykNCiAgICBpZiAocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApIHsNCiAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmipjnur/lm77mlbDmja7lpLHotKXvvIEnKQ0KICAgIH0NCg0KICAgIC8vIDQuIOWHhuWkh+aVsOaNruWSjOmFjee9rumhuQ0KICAgIGNvbnN0IHJlc3VsdCA9IF8ubWVyZ2UocmVzLmRhdGEsIHRoaXMub3B0aW9ucykNCg0KICAgIC8vIDUuIOWxleekuuaVsOaNrg0KICAgIG15Q2hhcnQuc2V0T3B0aW9uKHJlc3VsdCkNCiAgfSwNCiAgbWV0aG9kczoge30NCn0NCg=="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/views/Home/children/report","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 2. 为ECharts准备一个具备大小（宽高）的Dom -->\r\n      <div id=\"main\" style=\"width: 750px;height:400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 1. 导入 echarts\r\nimport echarts from 'echarts'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            //两边留白\r\n            boundaryGap: false\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  // 此时，页面上的元素，已经被渲染完毕了！\r\n  async mounted() {\r\n    // 3. 基于准备好的dom，初始化echarts实例\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n\r\n    const { data: res } = await this.$http.get('reports/type/1')\r\n    if (res.meta.status !== 200) {\r\n      return this.$message.error('获取折线图数据失败！')\r\n    }\r\n\r\n    // 4. 准备数据和配置项\r\n    const result = _.merge(res.data, this.options)\r\n\r\n    // 5. 展示数据\r\n    myChart.setOption(result)\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}