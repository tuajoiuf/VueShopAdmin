{"remainingRequest":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Cate.vue?vue&type=style&index=0&id=54d7bcbc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Cate.vue","mtime":1604507996832},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRyZWVUYWJsZSB7CiAgbWFyZ2luLXRvcDogMTVweDsKfQoKLmVsLWNhc2NhZGVyIHsKICB3aWR0aDogMTAwJTt9Cg=="},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;;AAEA;AACA","file":"Cate.vue","sourceRoot":"src/views/Home/children/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card >\r\n      <el-row>\r\n        <el-col >\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!--表格-->\r\n    <template>\r\n      <el-table\r\n          :data=\"catList\"\r\n          stripe\r\n          style=\"width: 100%\">\r\n\r\n      </el-table>\r\n    </template>\r\n\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"dialogFormVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\r\n      <el-form :model=\"addCateForm\":rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称\" prop=\"cate_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类\" >\r\n          <!-- options 用来指定数据源 -->\r\n          <!-- props 用来指定配置对象 -->\r\n          <el-cascader\r\n              expand-trigger=\"hover\" :options=\"parentCateList\"\r\n              :props=\"cascaderProps\" @change=\"parentCateChanged\"clearable change-on-select>\r\n          </el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: \"Cate\",\r\n    data() {\r\n      return {\r\n        queryInfo: {\r\n          type:3,\r\n          pagenum:1,\r\n          pagesize:5\r\n        },\r\n        //商品分类的数据列表，默认为空\r\n        catelist:[],\r\n        //总数据图\r\n        total:0,\r\n        //为tabble定义列的定义\r\n        colums:[\r\n          {\r\n            label:'分类名称',\r\n            prop:'cate_name'\r\n          },\r\n          {\r\n          label: '是否有效',\r\n            //表示当前这一列使用的模板列\r\n            type:'template',\r\n            //表示当前这一列使用模板名称\r\n            template:'isok'\r\n          },\r\n          {\r\n            label: '排序',\r\n            // 表示，将当前列定义为模板列\r\n            type: 'template',\r\n            // 表示当前这一列使用模板名称\r\n            template: 'order'\r\n          },\r\n          {\r\n            label: '操作',\r\n            type:'template',\r\n            template: 'opt'\r\n          }\r\n        ],\r\n        //控控制分类对话框的显示与隐藏\r\n        addCateDialogVisiable:false,\r\n        // 添加分类的表单数据对象\r\n        addCateFrom:{\r\n          // 将要添加的分类的名称\r\n            cat_name: '',\r\n          // 父级分类的Id\r\n          cat_pid: 0,\r\n          // 分类的等级，默认要添加的是1级分类\r\n          cat_level: 0\r\n        },\r\n        // 添加分类表单的验证规则对象\r\n        addCateFormRules: {\r\n          cat_name: [\r\n            { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n          ]\r\n        },\r\n        // 父级分类的列表\r\n        parentCateList: [],\r\n        // 指定级联选择器的配置对象\r\n        cascaderProps: {\r\n          value: 'cat_id',\r\n          label: 'cat_name',\r\n          children: 'children'\r\n        },\r\n        // 选中的父级分类的Id数组\r\n        selectedKeys: []\r\n      }\r\n      },\r\n    created() {\r\n      this.getCateList()\r\n    },\r\n    methods:{\r\n      //获取商品分类数据\r\n      async getCateList () {\r\n        const {data : res} = await this.$http.get('categories',{\r\n          params: this.queryInfo\r\n        })\r\n        if(res.data.status !== 200){\r\n          return this.$message.error('获取商品分类列表失败')\r\n        }\r\n        console.log(res.data)\r\n        // 把数据列表，赋值给catelist\r\n        this.catelist = res.data.result\r\n        // 为总数据条数赋值\r\n        this.total = res.data.total\r\n      },\r\n      //监听pagesize改变\r\n      handelCurrentChage(newpage) {\r\n        this.queryInfo.pagenum = newpage\r\n        this.getCateList()\r\n      },\r\n\r\n      //监听pagenum改变\r\n      handleCurrentChange(newpage) {\r\n        this.queryInfo.pagenum = newpage\r\n        this.getCateList()\r\n      },\r\n      //点击按钮，展示添加分类对话框\r\n      showAddCateDialog(){\r\n        // 先获取父级分类的数据列表\r\n        this.getParentCateList()\r\n        // 再展示出对话框\r\n        this.addCateDialogVisible = true\r\n        },\r\n\r\n      // 获取父级分类的数据列表\r\n      async getParentCateList() {\r\n        const { data: res } = await this.$http.get('categories', {\r\n          params: { type: 2 }\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取父级分类数据失败！')\r\n        }\r\n\r\n        console.log(res.data)\r\n        this.parentCateList = res.data\r\n      },\r\n      //选择项发变化触发这个函数\r\n      parentCateChanged(){\r\n        console.log(this.selectedKeys)\r\n        // 如果 selectedKeys 数组中的 length 大于0，证明选中的父级分类\r\n        // 反之，就说明没有选中任何父级分类\r\n      if (this.selectedKeys.length > 0){\r\n        //父级分类的我iD\r\n        this.addCateFrom.cat_pid = this.selectedKeys[\r\n            this.selectedKeys.length-1 ]\r\n        //为当前分类的等级赋值\r\n        this.addCateFrom.cat_level = this.selectedKeys.length\r\n        return\r\n      }else {\r\n        //父级分类的id\r\n        this.addCateFrom.cat_pid = 0\r\n        //当前分类的等级赋值\r\n        this.addCateFrom.cat_level =0\r\n\r\n      }\r\n      },\r\n      //点击按钮添加新的分类\r\n      addCate(){\r\n        this.$refs.addCateFromRef.validate( async valid => {\r\n          if (!valid) return\r\n          const {data: res} = await this.$http.post('categories',\r\n          params.addCateFrom)\r\n          if (res.mata.status !==201){\r\n            return this.$message.error('添加分类失败')\r\n          }\r\n          this.$message.success('添加分类成功')\r\n          this.getCateList()\r\n          this.addCateDialogVisible = false\r\n        })\r\n      }\r\n      },\r\n    //监听对话框的关闭事件，重置表单数据\r\n    addCateDialogClosed(){\r\n      this.$refs.addCateFromRef.resetFields()\r\n      this.selectedKeys = []\r\n      this.addCateFrom.cat_level = 0\r\n      this.addCateFrom.cat_pid = 0\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .treeTable {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .el-cascader {\r\n    width: 100%;}\r\n</style>"]}]}