{"remainingRequest":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Add.vue","mtime":1606636647998},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBfIGZyb20gJ2xvZGFzaCcKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZlSW5kZXg6ICcwJywKICAgICAgLy8g5re75Yqg5ZWG5ZOB55qE6KGo5Y2V5pWw5o2u5a+56LGhCiAgICAgIGFkZEZvcm06IHsKICAgICAgICBnb29kc19uYW1lOiAnJywKICAgICAgICBnb29kc19wcmljZTogMCwKICAgICAgICBnb29kc193ZWlnaHQ6IDAsCiAgICAgICAgZ29vZHNfbnVtYmVyOiAwLAogICAgICAgIC8vIOWVhuWTgeaJgOWxnueahOWIhuexu+aVsOe7hAogICAgICAgIGdvb2RzX2NhdDogW10sCiAgICAgICAgLy8g5Zu+54mH55qE5pWw57uECiAgICAgICAgcGljczogW10sCiAgICAgICAgLy8g5ZWG5ZOB55qE6K+m5oOF5o+P6L+wCiAgICAgICAgZ29vZHNfaW50cm9kdWNlOiAnJywKICAgICAgICBhdHRyczogW10KICAgICAgfSwKICAgICAgYWRkRm9ybVJ1bGVzOiB7CiAgICAgICAgZ29vZHNfbmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWVhuWTgeWQjeensCcsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBnb29kc19wcmljZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWVhuWTgeS7t+agvCcsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXSwKICAgICAgICBnb29kc193ZWlnaHQ6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXllYblk4Hph43ph48nLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgZ29vZHNfbnVtYmVyOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5ZWG5ZOB5pWw6YePJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIGdvb2RzX2NhdDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeWVhuWTgeWIhuexuycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXQogICAgICB9LAogICAgICAvLyDllYblk4HliIbnsbvliJfooagKICAgICAgY2F0ZWxpc3Q6IFtdLAogICAgICBjYXRlUHJvcHM6IHsKICAgICAgICBsYWJlbDogJ2NhdF9uYW1lJywKICAgICAgICB2YWx1ZTogJ2NhdF9pZCcsCiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicKICAgICAgfSwKICAgICAgLy8g5Yqo5oCB5Y+C5pWw5YiX6KGo5pWw5o2uCiAgICAgIG1hbnlUYWJsZURhdGE6IFtdLAogICAgICAvLyDpnZnmgIHlsZ7mgKfliJfooajmlbDmja4KICAgICAgb25seVRhYmxlRGF0YTogW10sCiAgICAgIC8vIOS4iuS8oOWbvueJh+eahFVSTOWcsOWdgAoKICAgICAgdXBsb2FkVVJMOiAnIGh0dHA6Ly90aW1lbWVldHlvdS5jb206ODg4OS9hcGkvcHJpdmF0ZS92MS91cGxvYWQnLAogICAgICAvLyDlm77niYfkuIrkvKDnu4Tku7bnmoRoZWFkZXJz6K+35rGC5aS05a+56LGhCiAgICAgIGhlYWRlck9iajogewogICAgICAgIEF1dGhvcml6YXRpb246IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpCiAgICAgIH0sCiAgICAgIHByZXZpZXdQYXRoOiAnJywKICAgICAgcHJldmlld1Zpc2libGU6IGZhbHNlCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRDYXRlTGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bmiYDmnInllYblk4HliIbnsbvmlbDmja4KICAgIGFzeW5jIGdldENhdGVMaXN0KCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ2NhdGVnb3JpZXMnKQoKICAgICAgaWYgKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWVhuWTgeWIhuexu+aVsOaNruWksei0pe+8gScpCiAgICAgIH0KCiAgICAgIHRoaXMuY2F0ZWxpc3QgPSByZXMuZGF0YQogICAgICBjb25zb2xlLmxvZyh0aGlzLmNhdGVsaXN0KQogICAgfSwKICAgIC8vIOe6p+iBlOmAieaLqeWZqOmAieS4remhueWPmOWMlu+8jOS8muinpuWPkei/meS4quWHveaVsAogICAgaGFuZGxlQ2hhbmdlKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmFkZEZvcm0uZ29vZHNfY2F0KQogICAgICBpZiAodGhpcy5hZGRGb3JtLmdvb2RzX2NhdC5sZW5ndGggIT09IDMpIHsKICAgICAgICB0aGlzLmFkZEZvcm0uZ29vZHNfY2F0ID0gW10KICAgICAgfQogICAgfSwKICAgIGJlZm9yZVRhYkxlYXZlKGFjdGl2ZU5hbWUsIG9sZEFjdGl2ZU5hbWUpIHsKICAgICAgLy8gY29uc29sZS5sb2coJ+WNs+Wwhuemu+W8gOeahOagh+etvumhteWQjeWtl+aYr++8micgKyBvbGRBY3RpdmVOYW1lKQogICAgICAvLyBjb25zb2xlLmxvZygn5Y2z5bCG6L+b5YWl55qE5qCH562+6aG15ZCN5a2X5piv77yaJyArIGFjdGl2ZU5hbWUpCiAgICAgIC8vIHJldHVybiBmYWxzZQogICAgICBpZiAob2xkQWN0aXZlTmFtZSA9PT0gJzAnICYmIHRoaXMuYWRkRm9ybS5nb29kc19jYXQubGVuZ3RoICE9PSAzKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+35YWI6YCJ5oup5ZWG5ZOB5YiG57G777yBJykKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHRhYkNsaWNrZWQoKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuYWN0aXZlSW5kZXgpCiAgICAgIC8vIOivgeaYjuiuv+mXrueahOaYr+WKqOaAgeWPguaVsOmdouadvwogICAgICBpZiAodGhpcy5hY3RpdmVJbmRleCA9PT0gJzEnKSB7CiAgICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KAogICAgICAgICAgICBgY2F0ZWdvcmllcy8ke3RoaXMuY2F0ZUlkfS9hdHRyaWJ1dGVzYCwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHBhcmFtczogeyBzZWw6ICdtYW55JyB9CiAgICAgICAgICAgIH0KICAgICAgICApCgogICAgICAgIGlmIChyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkgewogICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWKqOaAgeWPguaVsOWIl+ihqOWksei0pe+8gScpCiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSkKICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgaXRlbS5hdHRyX3ZhbHMgPQogICAgICAgICAgICAgIGl0ZW0uYXR0cl92YWxzLmxlbmd0aCA9PT0gMCA/IFtdIDogaXRlbS5hdHRyX3ZhbHMuc3BsaXQoJyAnKQogICAgICAgIH0pCiAgICAgICAgdGhpcy5tYW55VGFibGVEYXRhID0gcmVzLmRhdGEKICAgICAgfSBlbHNlIGlmICh0aGlzLmFjdGl2ZUluZGV4ID09PSAnMicpIHsKICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoCiAgICAgICAgICAgIGBjYXRlZ29yaWVzLyR7dGhpcy5jYXRlSWR9L2F0dHJpYnV0ZXNgLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcGFyYW1zOiB7IHNlbDogJ29ubHknIH0KICAgICAgICAgICAgfQogICAgICAgICkKCiAgICAgICAgaWYgKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAwKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W6Z2Z5oCB5bGe5oCn5aSx6LSl77yBJykKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKQogICAgICAgIHRoaXMub25seVRhYmxlRGF0YSA9IHJlcy5kYXRhCiAgICAgIH0KICAgIH0sCiAgICAvLyDlpITnkIblm77niYfpooTop4jmlYjmnpwKICAgIGhhbmRsZVByZXZpZXcoZmlsZSkgewogICAgICBjb25zb2xlLmxvZyhmaWxlKQogICAgICB0aGlzLnByZXZpZXdQYXRoID0gZmlsZS5yZXNwb25zZS5kYXRhLnVybAogICAgICB0aGlzLnByZXZpZXdWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIC8vIOWkhOeQhuenu+mZpOWbvueJh+eahOaTjeS9nAogICAgaGFuZGxlUmVtb3ZlKGZpbGUpIHsKICAgICAgLy8gY29uc29sZS5sb2coZmlsZSkKICAgICAgLy8gMS4g6I635Y+W5bCG6KaB5Yig6Zmk55qE5Zu+54mH55qE5Li05pe26Lev5b6ECiAgICAgIGNvbnN0IGZpbGVQYXRoID0gZmlsZS5yZXNwb25zZS5kYXRhLnRtcF9wYXRoCiAgICAgIC8vIDIuIOS7jiBwaWNzIOaVsOe7hOS4re+8jOaJvuWIsOi/meS4quWbvueJh+WvueW6lOeahOe0ouW8leWAvAogICAgICBjb25zdCBpID0gdGhpcy5hZGRGb3JtLnBpY3MuZmluZEluZGV4KHggPT4geC5waWMgPT09IGZpbGVQYXRoKQogICAgICAvLyAzLiDosIPnlKjmlbDnu4TnmoQgc3BsaWNlIOaWueazle+8jOaKiuWbvueJh+S/oeaBr+Wvueixoe+8jOS7jiBwaWNzIOaVsOe7hOS4reenu+mZpAogICAgICB0aGlzLmFkZEZvcm0ucGljcy5zcGxpY2UoaSwgMSkKICAgICAgY29uc29sZS5sb2codGhpcy5hZGRGb3JtKQogICAgfSwKICAgIC8vIOebkeWQrOWbvueJh+S4iuS8oOaIkOWKn+eahOS6i+S7tgogICAgaGFuZGxlU3VjY2VzcyhyZXNwb25zZSkgewogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgLy8gMS4g5ou85o6l5b6X5Yiw5LiA5Liq5Zu+54mH5L+h5oGv5a+56LGhCiAgICAgIGNvbnN0IHBpY0luZm8gPSB7IHBpYzogcmVzcG9uc2UuZGF0YS50bXBfcGF0aCB9CiAgICAgIC8vIDIuIOWwhuWbvueJh+S/oeaBr+Wvueixoe+8jHB1c2gg5YiwcGljc+aVsOe7hOS4rQogICAgICB0aGlzLmFkZEZvcm0ucGljcy5wdXNoKHBpY0luZm8pCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuYWRkRm9ybSkKICAgIH0sCiAgICAvLyDmt7vliqDllYblk4EKICAgIGFkZCgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign6K+35aGr5YaZ5b+F6KaB55qE6KGo5Y2V6aG577yBJykKICAgICAgICB9CiAgICAgICAgLy8g5omn6KGM5re75Yqg55qE5Lia5Yqh6YC76L6RCiAgICAgICAgLy8gbG9kYXNoICAgY2xvbmVEZWVwKG9iaikKICAgICAgICBjb25zdCBmb3JtID0gXy5jbG9uZURlZXAodGhpcy5hZGRGb3JtKQogICAgICAgIGZvcm0uZ29vZHNfY2F0ID0gZm9ybS5nb29kc19jYXQuam9pbignLCcpCiAgICAgICAgLy8g5aSE55CG5Yqo5oCB5Y+C5pWwCiAgICAgICAgdGhpcy5tYW55VGFibGVEYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICBjb25zdCBuZXdJbmZvID0gewogICAgICAgICAgICBhdHRyX2lkOiBpdGVtLmF0dHJfaWQsCiAgICAgICAgICAgIGF0dHJfdmFsdWU6IGl0ZW0uYXR0cl92YWxzLmpvaW4oJyAnKQogICAgICAgICAgfQogICAgICAgICAgdGhpcy5hZGRGb3JtLmF0dHJzLnB1c2gobmV3SW5mbykKICAgICAgICB9KQogICAgICAgIC8vIOWkhOeQhumdmeaAgeWxnuaApwogICAgICAgIHRoaXMub25seVRhYmxlRGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgY29uc3QgbmV3SW5mbyA9IHsgYXR0cl9pZDogaXRlbS5hdHRyX2lkLCBhdHRyX3ZhbHVlOiBpdGVtLmF0dHJfdmFscyB9CiAgICAgICAgICB0aGlzLmFkZEZvcm0uYXR0cnMucHVzaChuZXdJbmZvKQogICAgICAgIH0pCiAgICAgICAgZm9ybS5hdHRycyA9IHRoaXMuYWRkRm9ybS5hdHRycwogICAgICAgIGNvbnNvbGUubG9nKGZvcm0pCgogICAgICAgIC8vIOWPkei1t+ivt+axgua3u+WKoOWVhuWTgQogICAgICAgIC8vIOWVhuWTgeeahOWQjeensO+8jOW/hemhu+aYr+WUr+S4gOeahAogICAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRodHRwLnBvc3QoJ2dvb2RzJywgZm9ybSkKCiAgICAgICAgaWYgKHJlcy5tZXRhLnN0YXR1cyAhPT0gMjAxKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign5re75Yqg5ZWG5ZOB5aSx6LSl77yBJykKICAgICAgICB9CgogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg5ZWG5ZOB5oiQ5Yqf77yBJykKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2dvb2RzJykKICAgICAgfSkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjYXRlSWQoKSB7CiAgICAgIGlmICh0aGlzLmFkZEZvcm0uZ29vZHNfY2F0Lmxlbmd0aCA9PT0gMykgewogICAgICAgIHJldHVybiB0aGlzLmFkZEZvcm0uZ29vZHNfY2F0WzJdCiAgICAgIH0KICAgICAgcmV0dXJuIG51bGwKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Add.vue","sourceRoot":"src/views/Home/children/goods","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <!-- 提示区域 -->\r\n      <el-alert title=\"添加商品信息\" type=\"info\" center show-icon :closable=\"false\">\r\n      </el-alert>\r\n      <!-- 步骤条区域 -->\r\n      <el-steps :space=\"200\" :active=\"activeIndex - 0\" finish-status=\"success\" align-center>\r\n        <el-step title=\"基本信息\"></el-step>\r\n        <el-step title=\"商品参数\"></el-step>\r\n        <el-step title=\"商品属性\"></el-step>\r\n        <el-step title=\"商品图片\"></el-step>\r\n        <el-step title=\"商品内容\"></el-step>\r\n        <el-step title=\"完成\"></el-step>\r\n      </el-steps>\r\n\r\n      <!-- tab栏区域 -->\r\n\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\" label-position=\"top\">\r\n        <el-tabs v-model=\"activeIndex\" :tab-position=\"'left'\" :before-leave=\"beforeTabLeave\" @tab-click=\"tabClicked\">\r\n          <el-tab-pane label=\"基本信息\" name=\"0\">\r\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\r\n              <el-input v-model=\"addForm.goods_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\r\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\r\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\r\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"商品分类\" prop=\"goods_cat\">\r\n              <el-cascader expand-trigger=\"hover\" :options=\"catelist\" :props=\"cateProps\" v-model=\"addForm.goods_cat\" @change=\"handleChange\">\r\n              </el-cascader>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品参数\" name=\"1\">\r\n            <!-- 渲染表单的Item项 -->\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTableData\" :key=\"item.attr_id\">\r\n              <!-- 复选框组 -->\r\n              <el-checkbox-group v-model=\"item.attr_vals\">\r\n                <el-checkbox :label=\"cb\" v-for=\"(cb, i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\r\n              </el-checkbox-group>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品属性\" name=\"2\">\r\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.attr_id\">\r\n              <el-input v-model=\"item.attr_vals\"></el-input>\r\n            </el-form-item>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品图片\" name=\"3\">\r\n            <!-- action 表示图片要上传到的后台API地址 -->\r\n            <el-upload :action=\"uploadURL\" :on-preview=\"handlePreview\"\r\n                       :on-remove=\"handleRemove\" list-type=\"picture\"\r\n                       :headers=\"headerObj\" :on-success=\"handleSuccess\">\r\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            </el-upload>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"商品内容\" name=\"4\">\r\n            <!-- 富文本编辑器组件 -->\r\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\r\n            <!-- 添加商品的按钮 -->\r\n            <el-button type=\"primary\" class=\"btnAdd\" @click=\"add\">添加商品</el-button>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-form>\r\n\r\n    </el-card>\r\n\r\n    <!-- 图片预览 -->\r\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\r\n      <img :src=\"previewPath\" alt=\"\" class=\"previewImg\">\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import _ from 'lodash'\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        activeIndex: '0',\r\n        // 添加商品的表单数据对象\r\n        addForm: {\r\n          goods_name: '',\r\n          goods_price: 0,\r\n          goods_weight: 0,\r\n          goods_number: 0,\r\n          // 商品所属的分类数组\r\n          goods_cat: [],\r\n          // 图片的数组\r\n          pics: [],\r\n          // 商品的详情描述\r\n          goods_introduce: '',\r\n          attrs: []\r\n        },\r\n        addFormRules: {\r\n          goods_name: [\r\n            { required: true, message: '请输入商品名称', trigger: 'blur' }\r\n          ],\r\n          goods_price: [\r\n            { required: true, message: '请输入商品价格', trigger: 'blur' }\r\n          ],\r\n          goods_weight: [\r\n            { required: true, message: '请输入商品重量', trigger: 'blur' }\r\n          ],\r\n          goods_number: [\r\n            { required: true, message: '请输入商品数量', trigger: 'blur' }\r\n          ],\r\n          goods_cat: [\r\n            { required: true, message: '请选择商品分类', trigger: 'blur' }\r\n          ]\r\n        },\r\n        // 商品分类列表\r\n        catelist: [],\r\n        cateProps: {\r\n          label: 'cat_name',\r\n          value: 'cat_id',\r\n          children: 'children'\r\n        },\r\n        // 动态参数列表数据\r\n        manyTableData: [],\r\n        // 静态属性列表数据\r\n        onlyTableData: [],\r\n        // 上传图片的URL地址\r\n\r\n        uploadURL: ' http://timemeetyou.com:8889/api/private/v1/upload',\r\n        // 图片上传组件的headers请求头对象\r\n        headerObj: {\r\n          Authorization: window.sessionStorage.getItem('token')\r\n        },\r\n        previewPath: '',\r\n        previewVisible: false\r\n      }\r\n    },\r\n    created() {\r\n      this.getCateList()\r\n    },\r\n    methods: {\r\n      // 获取所有商品分类数据\r\n      async getCateList() {\r\n        const { data: res } = await this.$http.get('categories')\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取商品分类数据失败！')\r\n        }\r\n\r\n        this.catelist = res.data\r\n        console.log(this.catelist)\r\n      },\r\n      // 级联选择器选中项变化，会触发这个函数\r\n      handleChange() {\r\n        console.log(this.addForm.goods_cat)\r\n        if (this.addForm.goods_cat.length !== 3) {\r\n          this.addForm.goods_cat = []\r\n        }\r\n      },\r\n      beforeTabLeave(activeName, oldActiveName) {\r\n        // console.log('即将离开的标签页名字是：' + oldActiveName)\r\n        // console.log('即将进入的标签页名字是：' + activeName)\r\n        // return false\r\n        if (oldActiveName === '0' && this.addForm.goods_cat.length !== 3) {\r\n          this.$message.error('请先选择商品分类！')\r\n          return false\r\n        }\r\n      },\r\n      async tabClicked() {\r\n        // console.log(this.activeIndex)\r\n        // 证明访问的是动态参数面板\r\n        if (this.activeIndex === '1') {\r\n          const { data: res } = await this.$http.get(\r\n              `categories/${this.cateId}/attributes`,\r\n              {\r\n                params: { sel: 'many' }\r\n              }\r\n          )\r\n\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('获取动态参数列表失败！')\r\n          }\r\n\r\n          console.log(res.data)\r\n          res.data.forEach(item => {\r\n            item.attr_vals =\r\n                item.attr_vals.length === 0 ? [] : item.attr_vals.split(' ')\r\n          })\r\n          this.manyTableData = res.data\r\n        } else if (this.activeIndex === '2') {\r\n          const { data: res } = await this.$http.get(\r\n              `categories/${this.cateId}/attributes`,\r\n              {\r\n                params: { sel: 'only' }\r\n              }\r\n          )\r\n\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('获取静态属性失败！')\r\n          }\r\n\r\n          console.log(res.data)\r\n          this.onlyTableData = res.data\r\n        }\r\n      },\r\n      // 处理图片预览效果\r\n      handlePreview(file) {\r\n        console.log(file)\r\n        this.previewPath = file.response.data.url\r\n        this.previewVisible = true\r\n      },\r\n      // 处理移除图片的操作\r\n      handleRemove(file) {\r\n        // console.log(file)\r\n        // 1. 获取将要删除的图片的临时路径\r\n        const filePath = file.response.data.tmp_path\r\n        // 2. 从 pics 数组中，找到这个图片对应的索引值\r\n        const i = this.addForm.pics.findIndex(x => x.pic === filePath)\r\n        // 3. 调用数组的 splice 方法，把图片信息对象，从 pics 数组中移除\r\n        this.addForm.pics.splice(i, 1)\r\n        console.log(this.addForm)\r\n      },\r\n      // 监听图片上传成功的事件\r\n      handleSuccess(response) {\r\n        console.log(response)\r\n        // 1. 拼接得到一个图片信息对象\r\n        const picInfo = { pic: response.data.tmp_path }\r\n        // 2. 将图片信息对象，push 到pics数组中\r\n        this.addForm.pics.push(picInfo)\r\n        console.log(this.addForm)\r\n      },\r\n      // 添加商品\r\n      add() {\r\n        this.$refs.addFormRef.validate(async valid => {\r\n          if (!valid) {\r\n            return this.$message.error('请填写必要的表单项！')\r\n          }\r\n          // 执行添加的业务逻辑\r\n          // lodash   cloneDeep(obj)\r\n          const form = _.cloneDeep(this.addForm)\r\n          form.goods_cat = form.goods_cat.join(',')\r\n          // 处理动态参数\r\n          this.manyTableData.forEach(item => {\r\n            const newInfo = {\r\n              attr_id: item.attr_id,\r\n              attr_value: item.attr_vals.join(' ')\r\n            }\r\n            this.addForm.attrs.push(newInfo)\r\n          })\r\n          // 处理静态属性\r\n          this.onlyTableData.forEach(item => {\r\n            const newInfo = { attr_id: item.attr_id, attr_value: item.attr_vals }\r\n            this.addForm.attrs.push(newInfo)\r\n          })\r\n          form.attrs = this.addForm.attrs\r\n          console.log(form)\r\n\r\n          // 发起请求添加商品\r\n          // 商品的名称，必须是唯一的\r\n          const { data: res } = await this.$http.post('goods', form)\r\n\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error('添加商品失败！')\r\n          }\r\n\r\n          this.$message.success('添加商品成功！')\r\n          this.$router.push('/goods')\r\n        })\r\n      }\r\n    },\r\n    computed: {\r\n      cateId() {\r\n        if (this.addForm.goods_cat.length === 3) {\r\n          return this.addForm.goods_cat[2]\r\n        }\r\n        return null\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .el-checkbox {\r\n    margin: 0 10px 0 0 !important;\r\n  }\r\n\r\n  .previewImg {\r\n    width: 100%;\r\n  }\r\n\r\n  .btnAdd {\r\n    margin-top: 15px;\r\n  }\r\n</style>\r\n"]}]}