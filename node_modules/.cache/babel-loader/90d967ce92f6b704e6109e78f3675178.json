{"remainingRequest":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\src\\views\\Home\\children\\goods\\Cate.vue","mtime":1606404069478},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.卢\\WebstormProjects\\vueshop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,OAAA,EAAA,CAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAFA;AAOA;AACA,MAAA,QAAA,EAAA,EARA;AASA;AACA,MAAA,KAAA,EAAA,CAVA;AAWA;AACA,MAAA,OAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,KAAA,EAAA,MADA;AAEA;AACA,QAAA,IAAA,EAAA,UAHA;AAIA;AACA,QAAA,QAAA,EAAA;AALA,OALA,EAYA;AACA,QAAA,KAAA,EAAA,IADA;AAEA;AACA,QAAA,IAAA,EAAA,UAHA;AAIA;AACA,QAAA,QAAA,EAAA;AALA,OAZA,EAmBA;AACA,QAAA,KAAA,EAAA,IADA;AAEA;AACA,QAAA,IAAA,EAAA,UAHA;AAIA;AACA,QAAA,QAAA,EAAA;AALA,OAnBA,CAZA;AAuCA;AACA,MAAA,oBAAA,EAAA,KAxCA;AAyCA;AACA,MAAA,WAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,EAFA;AAGA;AACA,QAAA,OAAA,EAAA,CAJA;AAKA;AACA,QAAA,SAAA,EAAA;AANA,OA1CA;AAkDA;AACA,MAAA,gBAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA;AADA,OAnDA;AAwDA;AACA,MAAA,cAAA,EAAA,EAzDA;AA0DA;AACA,MAAA,aAAA,EAAA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA,UAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OA3DA;AAgEA;AACA,MAAA,YAAA,EAAA;AAjEA,KAAA;AAmEA,GArEA;AAsEA,EAAA,OAtEA,qBAsEA;AACA,SAAA,WAAA;AACA,GAxEA;AAyEA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,WAFA,yBAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA;AACA,kBAAA,MAAA,EAAA,KAAA,CAAA;AADA,iBAAA,CADA;;AAAA;AAAA;AACA,gBAAA,GADA,yBACA,IADA;;AAAA,sBAKA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GALA;AAAA;AAAA;AAAA;;AAAA,iDAMA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,CANA;;AAAA;AASA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,EATA,CAUA;;AACA,gBAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAXA,CAYA;;AACA,gBAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KAhBA;AAiBA;AACA,IAAA,gBAlBA,4BAkBA,OAlBA,EAkBA;AACA,WAAA,QAAA,CAAA,QAAA,GAAA,OAAA;AACA,WAAA,WAAA;AACA,KArBA;AAsBA;AACA,IAAA,mBAvBA,+BAuBA,OAvBA,EAuBA;AACA,WAAA,QAAA,CAAA,OAAA,GAAA,OAAA;AACA,WAAA,WAAA;AACA,KA1BA;AA2BA;AACA,IAAA,iBA5BA,+BA4BA;AACA;AACA,WAAA,iBAAA,GAFA,CAGA;;AACA,WAAA,oBAAA,GAAA,IAAA;AACA,KAjCA;AAkCA;AACA,IAAA,iBAnCA,+BAmCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AAAA,oBAAA,IAAA,EAAA;AAAA;AADA,iBAAA,CADA;;AAAA;AAAA;AACA,gBAAA,GADA,yBACA,IADA;;AAAA,sBAKA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GALA;AAAA;AAAA;AAAA;;AAAA,kDAMA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,aAAA,CANA;;AAAA;AASA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,gBAAA,MAAA,CAAA,cAAA,GAAA,GAAA,CAAA,IAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KA9CA;AA+CA;AACA,IAAA,iBAhDA,+BAgDA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,YAAA,EADA,CAEA;AACA;;AACA,UAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,OAAA,GAAA,KAAA,YAAA,CACA,KAAA,YAAA,CAAA,MAAA,GAAA,CADA,CAAA,CAFA,CAKA;;AACA,aAAA,WAAA,CAAA,SAAA,GAAA,KAAA,YAAA,CAAA,MAAA;AACA;AACA,OARA,MAQA;AACA;AACA,aAAA,WAAA,CAAA,OAAA,GAAA,CAAA,CAFA,CAGA;;AACA,aAAA,WAAA,CAAA,SAAA,GAAA,CAAA;AACA;AACA,KAlEA;AAmEA;AACA,IAAA,OApEA,qBAoEA;AAAA;;AACA,WAAA,KAAA,CAAA,cAAA,CAAA,QAAA;AAAA,2EAAA,kBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,KADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAEA,MAAA,CAAA,KAAA,CAAA,IAAA,CACA,YADA,EAEA,MAAA,CAAA,WAFA,CAFA;;AAAA;AAAA;AAEA,kBAAA,GAFA,yBAEA,IAFA;;AAAA,wBAOA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAPA;AAAA;AAAA;AAAA;;AAAA,oDAQA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,SAAA,CARA;;AAAA;AAWA,kBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,SAAA;;AACA,kBAAA,MAAA,CAAA,WAAA;;AACA,kBAAA,MAAA,CAAA,oBAAA,GAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAeA,KApFA;AAqFA;AACA,IAAA,mBAtFA,iCAsFA;AACA,WAAA,KAAA,CAAA,cAAA,CAAA,WAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,WAAA,CAAA,SAAA,GAAA,CAAA;AACA,WAAA,WAAA,CAAA,OAAA,GAAA,CAAA;AACA,KA3FA;AA4FA;AACA,IAAA,cA7FA,0BA6FA,EA7FA,EA6FA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,QAAA,CACA,kBADA,EAEA,IAFA,EAEA;AACA,kBAAA,iBAAA,EAAA,IADA;AAEA,kBAAA,gBAAA,EAAA,IAFA;AAGA,kBAAA,IAAA,EAAA;AAHA,iBAFA,EAMA,KANA,CAMA,UAAA,KAAA;AAAA,yBAAA,KAAA;AAAA,iBANA,CAFA;;AAAA;AAEA,gBAAA,YAFA;;AAAA,sBAaA,YAAA,KAAA,SAbA;AAAA;AAAA;AAAA;;AAAA,kDAcA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAdA;;AAAA;AAAA;AAAA,uBAgBA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,CAhBA;;AAAA;AAAA;AAgBA,gBAAA,GAhBA,yBAgBA,IAhBA;;AAAA,sBAkBA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAlBA;AAAA;AAAA;AAAA;;AAAA,kDAmBA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAnBA;;AAAA;AAuBA,gBAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,SAAA;;AACA,gBAAA,MAAA,CAAA,QAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAvHA;AAzEA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- 表格 -->\r\n      <tree-table class=\"treeTable\" :data=\"catelist\" :columns=\"columns\" :selection-type=\"false\"\r\n                  :expand-type=\"false\" show-index index-text=\"#\" border :show-row-hover=\"false\">\r\n        <!-- 是否有效 -->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted === false\" style=\"color: lightgreen;\"></i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" slot-scope=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level===0\">一级</el-tag>\r\n\r\n          <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level===1\">二级</el-tag>\r\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\" slot-scope=\"scope\">\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeCateById(scope.row.id)\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"querInfo.pagenum\" :page-sizes=\"[3, 5, 10, 15]\" :page-size=\"querInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类的对话框 -->\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\r\n      <!-- 添加分类的表单 -->\r\n      <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <!-- options 用来指定数据源 -->\r\n          <!-- props 用来指定配置对象 -->\r\n          <el-cascader expand-trigger=\"hover\" :options=\"parentCateList\" :props=\"cascaderProps\"\r\n                       v-model=\"selectedKeys\" @change=\"parentCateChanged\" clearable change-on-select>\r\n          </el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        // 查询条件\r\n        querInfo: {\r\n          type: 3,\r\n          pagenum: 1,\r\n          pagesize: 5\r\n        },\r\n        // 商品分类的数据列表，默认为空\r\n        catelist: [],\r\n        // 总数据条数\r\n        total: 0,\r\n        // 为table指定列的定义\r\n        columns: [\r\n          {\r\n            label: '分类名称',\r\n            prop: 'cat_name'\r\n          },\r\n          {\r\n            label: '是否有效',\r\n            // 表示，将当前列定义为模板列\r\n            type: 'template',\r\n            // 表示当前这一列使用模板名称\r\n            template: 'isok'\r\n          },\r\n          {\r\n            label: '排序',\r\n            // 表示，将当前列定义为模板列\r\n            type: 'template',\r\n            // 表示当前这一列使用模板名称\r\n            template: 'order'\r\n          },\r\n          {\r\n            label: '操作',\r\n            // 表示，将当前列定义为模板列\r\n            type: 'template',\r\n            // 表示当前这一列使用模板名称\r\n            template: 'opt'\r\n          }\r\n        ],\r\n        // 控制添加分类对话框的显示与隐藏\r\n        addCateDialogVisible: false,\r\n        // 添加分类的表单数据对象\r\n        addCateForm: {\r\n          // 将要添加的分类的名称\r\n          cat_name: '',\r\n          // 父级分类的Id\r\n          cat_pid: 0,\r\n          // 分类的等级，默认要添加的是1级分类\r\n          cat_level: 0\r\n        },\r\n        // 添加分类表单的验证规则对象\r\n        addCateFormRules: {\r\n          cat_name: [\r\n            { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n          ]\r\n        },\r\n        // 父级分类的列表\r\n        parentCateList: [],\r\n        // 指定级联选择器的配置对象\r\n        cascaderProps: {\r\n          value: 'cat_id',\r\n          label: 'cat_name',\r\n          children: 'children'\r\n        },\r\n        // 选中的父级分类的Id数组\r\n        selectedKeys: []\r\n      }\r\n    },\r\n    created() {\r\n      this.getCateList()\r\n    },\r\n    methods: {\r\n      // 获取商品分类数据\r\n      async getCateList() {\r\n        const { data: res } = await this.$http.get('categories', {\r\n          params: this.querInfo\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取商品分类失败！')\r\n        }\r\n\r\n        console.log(res.data)\r\n        // 把数据列表，赋值给 catelist\r\n        this.catelist = res.data.result\r\n        // 为总数据条数赋值\r\n        this.total = res.data.total\r\n      },\r\n      // 监听 pagesize 改变\r\n      handleSizeChange(newSize) {\r\n        this.querInfo.pagesize = newSize\r\n        this.getCateList()\r\n      },\r\n      // 监听 pagenum 改变\r\n      handleCurrentChange(newPage) {\r\n        this.querInfo.pagenum = newPage\r\n        this.getCateList()\r\n      },\r\n      // 点击按钮，展示添加分类的对话框\r\n      showAddCateDialog() {\r\n        // 先获取父级分类的数据列表\r\n        this.getParentCateList()\r\n        // 再展示出对话框\r\n        this.addCateDialogVisible = true\r\n      },\r\n      // 获取父级分类的数据列表\r\n      async getParentCateList() {\r\n        const { data: res } = await this.$http.get('categories', {\r\n          params: { type: 2 }\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取父级分类数据失败！')\r\n        }\r\n\r\n        console.log(res.data)\r\n        this.parentCateList = res.data\r\n      },\r\n      // 选择项发生变化触发这个函数\r\n      parentCateChanged() {\r\n        console.log(this.selectedKeys)\r\n        // 如果 selectedKeys 数组中的 length 大于0，证明选中的父级分类\r\n        // 反之，就说明没有选中任何父级分类\r\n        if (this.selectedKeys.length > 0) {\r\n          // 父级分类的Id\r\n          this.addCateForm.cat_pid = this.selectedKeys[\r\n          this.selectedKeys.length - 1\r\n              ]\r\n          // 为当前分类的等级赋值\r\n          this.addCateForm.cat_level = this.selectedKeys.length\r\n          return\r\n        } else {\r\n          // 父级分类的Id\r\n          this.addCateForm.cat_pid = 0\r\n          // 为当前分类的等级赋值\r\n          this.addCateForm.cat_level = 0\r\n        }\r\n      },\r\n      // 点击按钮，添加新的分类\r\n      addCate() {\r\n        this.$refs.addCateFormRef.validate(async valid => {\r\n          if (!valid) return\r\n          const { data: res } = await this.$http.post(\r\n              'categories',\r\n              this.addCateForm\r\n          )\r\n\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error('添加分类失败！')\r\n          }\r\n\r\n          this.$message.success('添加分类成功！')\r\n          this.getCateList()\r\n          this.addCateDialogVisible = false\r\n        })\r\n      },\r\n      // 监听对话框的关闭事件，重置表单数据\r\n      addCateDialogClosed() {\r\n        this.$refs.addCateFormRef.resetFields()\r\n        this.selectedKeys = []\r\n        this.addCateForm.cat_level = 0\r\n        this.addCateForm.cat_pid = 0\r\n      },\r\n      // 根据Id删除对应的用户信息\r\n      async  removeCateById(id) {\r\n        //弹框查询用户是否删除数据\r\n        const configResult = await this.$confirm(\r\n            '此操作将永远删除用户，是否继续？',\r\n            '提示',{\r\n              confirmButtonText:'确定',\r\n              cancelButtonText:'取消',\r\n              type:'warning'\r\n            }).catch(error => error)\r\n\r\n        // 如果用户确认删除，则返回值为字符串 confirm\r\n        // 如果用户取消了删除，则返回值为字符串 cancel\r\n        // console.log(confirmResult)\r\n        if (configResult !== 'confirm'){\r\n          return this.$message.info('已取消删除')\r\n        }\r\n        const { data : res} = await this.$http.delete(' categories/' + id)\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('删除用户成功')\r\n\r\n        }\r\n\r\n        this.$message.success('删除用户成功！')\r\n        this.catelist()\r\n\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .treeTable {\r\n    margin-top: 15px;\r\n  }\r\n\r\n  .el-cascader {\r\n    width: 100%;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/Home/children/goods"}]}